<?php
/*
***********************************************************************************
DaDaBIK (DaDaBIK is a DataBase Interfaces Kreator) http://www.dadabik.org/
Copyright (C) 2001-2012  Eugenio Tacchini

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

If you want to contact me by e-mail, this is my address: eugenio.tacchini@unicatt.it
***********************************************************************************
*/
?>
<?php
$int_fields_ar[0][0] = "Name of the field:";
$int_fields_ar[0][1] = "name_field";

$int_fields_ar[1][0] = "Label:";
$int_fields_ar[1][1] = "label_field";
$int_fields_ar[1][2] = "text";
$int_fields_ar[1][3] = "25";
$int_fields_ar[1][4] = "The text that DaDaBIK will display in the interface as label of the field.";

$int_fields_ar[2][0] = "Field type:";
$int_fields_ar[2][1] = "type_field";
$int_fields_ar[2][2] = "select_custom";
//$int_fields_ar[2][3] = "text/textarea/password/insert_date/update_date/date/select_single/select_multiple_menu/select_multiple_checkbox/generic_file/image_file/ID_user/unique_ID";
$int_fields_ar[2][3] = "text/textarea/rich_editor/password/insert_date/update_date/date/select_single/generic_file/image_file/ID_user/unique_ID";
$int_fields_ar[2][4] = "<ul><li><b>text:</b> a text box</li>
    <li><b>textarea:</b> a textarea box</li>
    <li><b>rich_editor:</b> a rich text editor that allows to easily insert/modify HTML content. THIS COULD LEAD TO SECURITY PROBLEMS. READ THE DOCUMENTATION BEFORE USING!</li>
    <li><b>password:</b> a password text box</li>
    <li><b>insert_date:</b> the current date will be automatically inserted into this field when you insert a new record in your table; an insert_date field must be excluded from the insert/update form, see below (Field present in the insert/update form?). Note that the corresponding database field type must be date</li>
    <li><b>update_date:</b> the current date will be automatically inserted into this field when you update a record in your table; an update_date field must be excluded from the insert/update form, see below (Field present in the insert/update form?). Note that the corresponding database field type must be date</li>
    <li><b>date:</b> three menu: day, month, year. Note that the corresponding database field type must be date</li>
    <li><b>select_single:</b> a customizable menu, see below the parameters Option to include, Primary key field, Primary key table, Linked fields to specify the menu items</li>
    <li><b>generic_file:</b> an input field which allows the user to browse in his file system and upload a file. You need to specify the allowed file extensions in config.php. Note that the corresponding database field type must be varchar.</li>
    <li><b>image_file:</b> the same as the above, but in this case DaDaBIK supposes that the file is an image and shows it when the record is displayed. You need to specify the allowed file extensions in config.php. Note that the corresponding database field type must be varchar</li>
    <li><b>ID_user:</b> the username of the current user will be automatically inserted into this field when you insert a new record; an ID_user field must be excluded from the insert/update form, see below (Field present in the insert/update form?). Note that the corresponding database field type must be varchar.</li>
    <li><b>unique_ID:</b> a unique ID generated by using the PHP function unique_ID() in conjunction with microtime(), getmypid() and md5() will be automatically inserted in this field when you insert a new record into your table; a unique_ID field must be excluded from the insert/update form, see below (Field present in the insert/update form?). Problably you will never use this field type, it can be useful just in very special cases.</li></ul>";

$int_fields_ar[3][0] = "Content type:";
$int_fields_ar[3][1] = "content_field";
$int_fields_ar[3][2] = "select_custom";
$int_fields_ar[3][3] = "alphabetic/alphanumeric/numeric/url/timestamp/email/html/phone";
$int_fields_ar[3][4] = "The content typep determines the check procedure DaDaBIK will use during an insert/update and how a field value is displayed; select among:<ul>

    <li><b>alphabetic:</b> only alphabetic characters allowed
    <li><b>alphanumeric:</b> all characters allowed
    <li><b>numeric:</b> only numeric characters allowed
    <li><b>url:</b> only URL with a correct syntax allowed, support from http/https/ftp protocols and port numbers; field displayed as a URL link
    <li><b>timestamp:</b> only integers allowed; field displayed as date and time according to the <i>date_format</i> parameter in config.php
    <li><b>email:</b> only e-mail addresses with a correct syntax allowed; field displayed as a mailto: link
    <li><b>html:</b> all characters allowed; DaDaBIK doesn\'t perform a conversion from special characters to HTML entities with htmlspecialchars for the fields having this content type. For example, this content type can be used to enter a full custom URL in the standard HTML format or an HTML formatted text. THIS COULD LEAD TO SECURITY PROBLEMS. READ THE DOCUMENTATION BEFORE USING!
    <li><b>phone:</b> only phone numbers with a correct syntax (a + sign followed by numbers e.g. +39025689781) allowed.
    </ul>
";

$int_fields_ar[4][0] = "Field present in the search form?";
$int_fields_ar[4][1] = "present_search_form_field";
$int_fields_ar[4][2] = "select_yn";
$int_fields_ar[4][4] = "No help available.";

$int_fields_ar[5][0] = "Field present in the results page?";
$int_fields_ar[5][1] = "present_results_search_field";
$int_fields_ar[5][2] = "select_yn";
$int_fields_ar[5][4] = "No help available.";

$int_fields_ar[6][0] = "Field present in the details page?";
$int_fields_ar[6][1] = "present_details_form_field";
$int_fields_ar[6][2] = "select_yn";
$int_fields_ar[6][4] = "No help available.";

$int_fields_ar[7][0] = "Field present in the insert/update form?";
$int_fields_ar[7][1] = "present_insert_form_field";
$int_fields_ar[7][2] = "select_yn";
$int_fields_ar[7][4] = "If the field is auto-increment you should choose N.";

$int_fields_ar[8][0] = "Is the field a required one?";
$int_fields_ar[8][1] = "required_field";
$int_fields_ar[8][2] = "select_yn";
$int_fields_ar[8][4] = "Choose if the field should be required during insert and update procedures.";

$int_fields_ar[9][0] = "Check for duplicated entries during insert?";
$int_fields_ar[9][1] = "check_duplicated_insert_field";
$int_fields_ar[9][2] = "select_yn";
$int_fields_ar[9][4] = "Choose if the field value should be checked for possible duplication during the insert procedure.";


$int_fields_ar[14][0] = "Other choices allowed?";
$int_fields_ar[14][1] = "other_choices_field";
$int_fields_ar[14][2] = "select_yn";
$int_fields_ar[14][4] = "Choose if the field, a select_single one, can accept also values other than the pre-set options during an insert/update.<br><br>If the user add a different value, it will be included in the list of pre-set options. Note that, if the field is a foreign key (see Primary key field for a definition), the <i>other</i> value is used to insert a new record in the primary key table.<br><br>The use of this option together with a foreign key field makes sense only if there is just one linked field and requires that <i>Primary key table</i> has a primary key <b>auto-increment</b> field.";

$int_fields_ar[10][0] = "Option to include:";
$int_fields_ar[10][1] = "select_options_field";
$int_fields_ar[10][2] = "text";
$int_fields_ar[10][3] = "25";
$int_fields_ar[10][4] = "Specify the possible options of a select_single field e.g. ~~teacher~manager~student~, in this example the first option is blank.";

$int_fields_ar[12][0] = "Primary key field";
$int_fields_ar[12][1] = "primary_key_field_field";
$int_fields_ar[12][2] = "text";
$int_fields_ar[12][3] = "25";
$int_fields_ar[12][4] = "if a field is a select_single and the options must be driven from another table (so the field can be considered foreign key for DaDaBIK, regardless of a real dbms foreign key declaration), specify here the primary key of that table.";

$int_fields_ar[11][0] = "Primary key table";
$int_fields_ar[11][1] = "primary_key_table_field";
$int_fields_ar[11][2] = "text";
$int_fields_ar[11][3] = "25";
$int_fields_ar[11][4] = "if a field is a select_single and the options must be driven from another table, specify here the name of that table.";

$int_fields_ar[13][0] = "Linked fields";
$int_fields_ar[13][1] = "linked_fields_field";
$int_fields_ar[13][2] = "text";
$int_fields_ar[13][3] = "25";
$int_fields_ar[13][4] = " The fields in the primary key table you want to display. Imagine you have a table <i>albums_tab</i> that contains information about CDs. In this table you have a field <i>ID_author</i> that &quot;links&quot; the table <i>authors_tab</i>. If you want to display, for each record, <i>first_name_author</i> and <i>last_name_author</i> of <i>authors_tab</i>, you have to use <i>ID_author</i> as primary key field, <i>authors_tab</i> as primary key table, <i>first_name_author</i>~<i>last_name_author</i> as linked fields.";

$int_fields_ar[15][0] = "Order by";
$int_fields_ar[15][1] = "linked_fields_order_by_field";
$int_fields_ar[15][2] = "text";
$int_fields_ar[15][3] = "25";
$int_fields_ar[15][4] = "The linked field by which you want to order the items in the menu created by a select_single field.";

$int_fields_ar[16][0] = "Order type";
$int_fields_ar[16][1] = "linked_fields_order_type_field";
$int_fields_ar[16][2] = "text";
$int_fields_ar[16][3] = "25";
$int_fields_ar[16][4] = "The order type (ASC or DESC, if you leave blank ASC is the default) to be used on the &quot;Order by&quot; field.";

$int_fields_ar[17][0] = "Search operators:";
$int_fields_ar[17][1] = "select_type_field";
$int_fields_ar[17][2] = "text";
$int_fields_ar[17][3] = "25";
$int_fields_ar[17][4] = "Specify is_equal, contains, starts_with, ends_with, greater_than, less_than or a group of this operator separated by &quot;/&quot;. E.g. if you specify just &quot;contains&quot; DaDaBIK will always use the contains operator for this field during the search; if you use &quot;exactly/contains&quot; DaDaBIK will create for this field a listbox with the operators exactly/like, the user can then choose the preferred one during each search operation.";

$int_fields_ar[18][0] = "Prefix:";
$int_fields_ar[18][1] = "prefix_field";
$int_fields_ar[18][2] = "text";
$int_fields_ar[18][3] = "25";
$int_fields_ar[18][4] = "for text, textarea and rich_editor fields you can choose a prefix default value for your field, e.g. &quot;http://&quot; if your field need to be filled with a Web url; the prefix will be displayed directly in the insert form, but if the user doesn\'t fill-in the field it will be considered as blank.";

$int_fields_ar[19][0] = "Default value:";
$int_fields_ar[19][1] = "default_value_field";
$int_fields_ar[19][2] = "text";
$int_fields_ar[19][3] = "25";
$int_fields_ar[19][4] = "For text, textarea and rich_editor fields you can choose a default value for your field, the value will be displayed directly in the insert form.";

$int_fields_ar[20][0] = "Width (chars):";
$int_fields_ar[20][1] = "width_field";
$int_fields_ar[20][2] = "text";
$int_fields_ar[20][3] = "2";
$int_fields_ar[20][4] = "The width of an input box, used with text, password, textarea and rich_editor boxes.";

$int_fields_ar[21][0] = "Height (chars):";
$int_fields_ar[21][1] = "height_field";
$int_fields_ar[21][2] = "text";
$int_fields_ar[21][3] = "2";
$int_fields_ar[21][4] = "The height of an input box, used with textarea and rich_editor boxes.";

$int_fields_ar[22][0] = "Maxlength:";
$int_fields_ar[22][1] = "maxlength_field";
$int_fields_ar[22][2] = "text";
$int_fields_ar[22][3] = "4";
$int_fields_ar[22][4] = "The maximum number of characters allowed in the input box, used with text, password, textarea, rich_editor boxes and select_single (just for the &quot;other&quot; option).";

$int_fields_ar[23][0] = "Hint:";
$int_fields_ar[23][1] = "hint_insert_field";
$int_fields_ar[23][2] = "text";
$int_fields_ar[23][3] = "25";
$int_fields_ar[23][4] = "The text of a hint for the user that will appear during the insert/update procedure near the input field.";

$int_fields_ar[24][0] = "Linked items table names:";
$int_fields_ar[24][1] = "items_table_names_field";
$int_fields_ar[24][2] = "text";
$int_fields_ar[24][3] = "25";
$int_fields_ar[24][4] = "You should fill this property only for the primary key of a table, when you want to enable a master/details view.<br><br>For example imagine you have an albums (id_album, title_album) table and a songs (id_song, id_album, title_song) table; if you want to display, in the album detail view, also the list of the linked songs, you have to put <i>songs</i> in <i>Linked items table names</i> and <i>id_album</i> in <i>Items table foreign key field names</i> (see below). Each table can have more than one linked table; in this case you can add additional table and foreign key field names using the separator.";

$int_fields_ar[25][0] = "Items table foreign key field names:";
$int_fields_ar[25][1] = "items_table_fk_field_names_field";
$int_fields_ar[25][2] = "text";
$int_fields_ar[25][3] = "25";
$int_fields_ar[25][4] = "You should fill this property only for the primary key of a table, when you want to enable a master/details view.<br><br>For example imagine you have an albums (id_album, title_album) table and a songs (id_song, id_album, title_song) table; if you want to display, in the album detail view, also the list of the linked songs, you have to put <i>songs</i> in <i>Linked items table names</i> (see above) and <i>id_album </i>in <i>Items table foreign key field names</i>. Each table can have more than one linked table; in this case you can add additional table and foreign key field names using the separator. It is also important to highlight that, in this example, <i>id_album</i> in <i>songs</i> should be a select_single field with values driven from albums (see field type for information about select_single fields).";

$int_fields_ar[26][0] = "Separator of the options:";
$int_fields_ar[26][1] = "separator_field";
$int_fields_ar[26][2] = "text";
$int_fields_ar[26][3] = "2";
$int_fields_ar[26][4] = "This is the separator characther used here to separate values in the <i>Option to include</i>, <i>Linked fields</i>, <i>Linked items table names</i> and <i>Items table foreign key field names</i> parameters. In most of the case you can safely leave (and use) the default one, ~";
?>
